/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import control.BorrowerDAO;
import control.StaffDAO;
import java.awt.HeadlessException;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.net.Socket;
import java.net.UnknownHostException;
import java.sql.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import model.Borrower;
import model.Staff;

/**
 *
 * @author lienb
 */
public class Client extends javax.swing.JFrame {

    /**
     * Creates new form Client
     */
    
    private Socket socketOfClient;
    static final String ip = "localhost";	
    private DataInputStream is;
    private DataOutputStream os;
    public String emailClient;
	
	/**
	 * Launch the application.
	 */
    public void startClient() throws UnknownHostException, IOException{
        
        System.out.println("Client  chạy");
	socketOfClient = new Socket(ip, 1998);
	is = new DataInputStream(socketOfClient.getInputStream());
	os = new DataOutputStream(socketOfClient.getOutputStream());
    }
	
    public void close() throws IOException{
	is.close();
	os.close();
	socketOfClient.close();
    }
	
    public void sendMSG(String data) throws IOException{
	os.writeUTF(data);
	os.flush();
    }
	
    public void sendAccount(String name, String email, String password, String address, String phone) throws IOException{
	os.writeUTF(name);
	os.flush();
        os.writeUTF(email);
	os.flush();
        os.writeUTF(password);
	os.flush();
	os.writeUTF(address);
        os.flush();
        os.writeUTF(phone);
    }
    
     public void sendUpdateAccount(int idborrower, String name, String email, String password, String address, String phone) throws IOException{
	os.writeUTF(String.valueOf(idborrower));
        os.flush();
        os.writeUTF(name);
	os.flush();
        os.writeUTF(email);
	os.flush();
        os.writeUTF(password);
	os.flush();
	os.writeUTF(address);
        os.flush();
        os.writeUTF(phone);
    }
	
    public String getMSG() throws IOException{
	String data = is.readUTF();
	return data;
    }
	
    public void sendRequestLogin(String email, String password) throws IOException{
	os.writeUTF(email);
	os.flush();
	os.writeUTF(password);
	os.flush();
    } 
    
    public void sendHoldRequest(String idborrower, String idbook, String date) throws IOException{
        os.writeUTF(idborrower);
        os.flush();
        os.writeUTF(idbook);
        os.flush();
        os.writeUTF(date);
        os.flush();   
        
    }
	
    public Client() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        buttonBorrower = new javax.swing.JButton();
        txtEmail = new javax.swing.JTextField();
        txtPassword = new javax.swing.JTextField();
        buttonSignup = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Email");

        jLabel2.setText("Password");

        buttonBorrower.setText("Đăng nhập");
        buttonBorrower.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBorrowerActionPerformed(evt);
            }
        });

        buttonSignup.setText("Đăng kí");
        buttonSignup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSignupActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtEmail, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE)
                    .addComponent(txtPassword))
                .addGap(149, 149, 149))
            .addGroup(layout.createSequentialGroup()
                .addGap(123, 123, 123)
                .addComponent(buttonBorrower)
                .addGap(54, 54, 54)
                .addComponent(buttonSignup)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonBorrower)
                    .addComponent(buttonSignup))
                .addContainerGap(99, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
	
    private void buttonBorrowerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBorrowerActionPerformed
        // TODO add your handling code here:
        String email = null;
        String password = null;
        String request = null;
        System.out.println("Đăng nhập");
        
        try {
            request = "login";
            email = txtEmail.getText();
            password = txtPassword.getText();
            
            sendMSG(request);
            sendRequestLogin(email, password);
				
	} catch (Exception e) {
            e.printStackTrace();
	}
        
        try {
		String check = getMSG();
		if(check.equals("borrower")){
			//nameOfUser = name;
                        Borrower borrower = new Borrower();
                        borrower = null;
                        borrower = (new BorrowerDAO()).check(email, password);
			JOptionPane.showMessageDialog(null, "Bạn đọc đăng nhập thành công");
			this.setVisible(false);
			new User(this, borrower).setVisible(true);
		}
             
		if(check.equals("fail")){
                    JOptionPane.showMessageDialog(null, "Kiểm tra lại email và password của bạn");
		}
				
                if(check.equals("admin")){
                    
                    Staff staff = new Staff();
                    staff = (new StaffDAO()).check(email, password);
                    JOptionPane.showMessageDialog(null, "Admin đăng nhập");
			this.setVisible(false);
			new Admin(this).setVisible(true);
		}
			
	
                
        }catch( Exception e){
            e.printStackTrace();
        }
        
        
    }//GEN-LAST:event_buttonBorrowerActionPerformed

    private void buttonSignupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSignupActionPerformed
        // TODO add your handling code here:
        SignUp signUp = new SignUp(this);
        signUp.setVisible(true);
        
        
        
    }//GEN-LAST:event_buttonSignupActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    Client client = new Client();
                    client.startClient();
                    client.setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(Client.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonBorrower;
    private javax.swing.JButton buttonSignup;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtPassword;
    // End of variables declaration//GEN-END:variables
}
